// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace netatmocore.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class NAPlace
    {
        /// <summary>
        /// Initializes a new instance of the NAPlace class.
        /// </summary>
        public NAPlace()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NAPlace class.
        /// </summary>
        public NAPlace(string city = default(string), double? altitude = default(double?), string country = default(string), bool? fromIp = default(bool?), bool? improveLocProposed = default(bool?), IList<double?> location = default(IList<double?>), string timezone = default(string), bool? trustLocation = default(bool?))
        {
            City = city;
            Altitude = altitude;
            Country = country;
            FromIp = fromIp;
            ImproveLocProposed = improveLocProposed;
            Location = location;
            Timezone = timezone;
            TrustLocation = trustLocation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "altitude")]
        public double? Altitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "from_ip")]
        public bool? FromIp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "improveLocProposed")]
        public bool? ImproveLocProposed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public IList<double?> Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timezone")]
        public string Timezone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "trust_location")]
        public bool? TrustLocation { get; set; }

    }
}
